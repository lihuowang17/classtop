name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    name: Build and Release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: ''
            bundles: '--bundles app'
          - platform: 'ubuntu-22.04'
            args: ''
            bundles: ''
          - platform: 'windows-latest'
            args: ''
            bundles: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install system dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install frontend dependencies
        run: npm install

      - name: Download Python standalone (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          curl -L -o python.tar.gz https://github.com/astral-sh/python-build-standalone/releases/download/20251014/cpython-3.10.19%2B20251014-x86_64-pc-windows-msvc-install_only_stripped.tar.gz
          mkdir -p src-tauri/pyembed
          tar -xzf python.tar.gz -C src-tauri/pyembed

      - name: Download Python standalone (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          curl -L -o python.tar.gz https://github.com/astral-sh/python-build-standalone/releases/download/20251014/cpython-3.10.19%2B20251014-x86_64-unknown-linux-gnu-install_only_stripped.tar.gz
          mkdir -p src-tauri/pyembed
          tar -xzf python.tar.gz -C src-tauri/pyembed

      - name: Download Python standalone (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          curl -L -o python.tar.gz https://github.com/astral-sh/python-build-standalone/releases/download/20251014/cpython-3.10.19%2B20251014-aarch64-apple-darwin-install_only_stripped.tar.gz
          mkdir -p src-tauri/pyembed
          tar -xzf python.tar.gz -C src-tauri/pyembed

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip uv
          uv pip install --system --reinstall-package=classtop ./src-tauri

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          PYO3_PYTHON: ${{ github.workspace }}/src-tauri/pyembed/python/${{ matrix.platform == 'windows-latest' && 'python.exe' || 'bin/python3' }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'ClassTop v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: --config=src-tauri/tauri.bundle.json ${{ matrix.bundles }} -- --profile bundle-release ${{ matrix.args }}
